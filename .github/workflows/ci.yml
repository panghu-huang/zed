name: CI

on:
  push:
    branches:
      - main
      - "v[0-9]+.[0-9]+.x"
    tags:
      - "v*"
  pull_request:
    branches:
      - "**"

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

jobs:
  bundle-mac:
    name: Create a macOS bundle
    runs-on: macos-13
    env:
      MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
      MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
      APPLE_NOTARIZATION_USERNAME: ${{ secrets.APPLE_NOTARIZATION_USERNAME }}
      APPLE_NOTARIZATION_PASSWORD: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
      ZED_CLIENT_CHECKSUM_SEED: ${{ secrets.ZED_CLIENT_CHECKSUM_SEED }}
      DIGITALOCEAN_SPACES_ACCESS_KEY: ${{ secrets.DIGITALOCEAN_SPACES_ACCESS_KEY }}
      DIGITALOCEAN_SPACES_SECRET_KEY: ${{ secrets.DIGITALOCEAN_SPACES_SECRET_KEY }}
    steps:
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: "recursive"

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Limit target directory size
        run: script/clear-target-dir-if-larger-than 100

      - name: Determine version and release channel
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          set -eu

          version=$(script/get-crate-version zed)
          channel=stable
          echo "Publishing version: ${version} on release channel ${channel}"
          echo "RELEASE_CHANNEL=${channel}" >> $GITHUB_ENV

          expected_tag_name=""
          case ${channel} in
            stable)
              expected_tag_name="v${version}";;
            preview)
              expected_tag_name="v${version}-pre";;
            nightly)
              expected_tag_name="v${version}-nightly";;
            *)
              echo "can't publish a release on channel ${channel}"
              exit 1;;
          esac
          if [[ $GITHUB_REF_NAME != $expected_tag_name ]]; then
            echo "invalid release tag ${GITHUB_REF_NAME}. expected ${expected_tag_name}"
            exit 1
          fi
          script/draft-release-notes "$version" "$channel" > target/release-notes.md

      - name: Generate license file
        run: script/generate-licenses

      - name: Create macOS app bundle
        run: script/bundle-mac

      - name: Rename single-architecture binaries
        run: |
          mv target/x86_64-apple-darwin/release/Zed.dmg target/x86_64-apple-darwin/release/Zed-x86_64.dmg

      - name: Upload app bundle (x86_64) to workflow run
        uses: actions/upload-artifact@v4
        with:
          name: Zed_${{ github.event.pull_request.head.sha || github.sha }}-x86_64.dmg
          path: target/x86_64-apple-darwin/release/Zed-x86_64.dmg
